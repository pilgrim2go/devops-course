apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose/docker-compose.yml
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: sidekiq
  name: sidekiq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: sidekiq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose/docker-compose.yml
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: sidekiq
    spec:
      containers:
      - args:
        - nami
        - start
        - --foreground
        - discourse-sidekiq
        env:
        - name: DISCOURSE_HOST
          value: discourse
        - name: DISCOURSE_HOSTNAME
          value: www.example.com
        - name: DISCOURSE_PORT
          value: "3000"
        - name: DISCOURSE_POSTGRESQL_NAME
          value: bitnami_application
        - name: DISCOURSE_POSTGRESQL_PASSWORD
          value: bitnami1
        - name: DISCOURSE_POSTGRESQL_USERNAME
          value: bn_discourse
        image: docker.io/bitnami/discourse:2-debian-10
        imagePullPolicy: ""
        name: sidekiq
        resources: {}
        volumeMounts:
        - mountPath: /bitnami
          name: dockercompose-discourse-data
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: dockercompose-discourse-data
        persistentVolumeClaim:
          claimName: dockercompose-discourse-data
status: {}
