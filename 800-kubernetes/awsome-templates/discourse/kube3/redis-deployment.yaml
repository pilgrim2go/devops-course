---
# Source: discourse/charts/redis/templates/health-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-health
  namespace: "default"
  labels:
    app: redis
    chart: redis-11.2.3
    heritage: Helm
    release: RELEASE-NAME
data:
  ping_readiness_local.sh: |-
    #!/bin/bash
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ]; then
      echo "$response"
      exit 1
    fi
  ping_liveness_local.sh: |-
    #!/bin/bash
    response=$(
      timeout -s 3 $1 \
      redis-cli \
        -h localhost \
        -p $REDIS_PORT \
        ping
    )
    if [ "$response" != "PONG" ] && [ "$response" != "LOADING Redis is loading the dataset in memory" ]; then
      echo "$response"
      exit 1
    fi

---    
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f ../docker-compose/docker-compose.yml
    kompose.version: 1.21.0 ()
  creationTimestamp: null
  labels:
    io.kompose.service: redis
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: redis
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f ../docker-compose/docker-compose.yml
        kompose.version: 1.21.0 ()
      creationTimestamp: null
      labels:
        io.kompose.service: redis
    spec:
      containers:
      - name: redis
        image: localhost:5000/bitnami/redis:6.0-debian-10
        imagePullPolicy: ""
        env:
          - name: ALLOW_EMPTY_PASSWORD
            value: "yes"
          - name: REDIS_PORT
            value: "6379"            
        resources: {}
        volumeMounts:
        - mountPath: /bitnami
          name: dockercompose-redis-data
        - name: health
          mountPath: /health

        ports:
        - containerPort: 3000
        readinessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
              - sh
              - -c
              - /health/ping_readiness_local.sh 1        
        livenessProbe:
          initialDelaySeconds: 5
          periodSeconds: 5
          # One second longer than command timeout should prevent generation of zombie processes.
          timeoutSeconds: 6
          successThreshold: 1
          failureThreshold: 5
          exec:
            command:
              - sh
              - -c
              - /health/ping_liveness_local.sh 5
      restartPolicy: Always
      serviceAccountName: ""
      volumes:
      - name: dockercompose-redis-data
        persistentVolumeClaim:
          claimName: dockercompose-redis-data
      - name: health
        configMap:
          name: redis-health
          defaultMode: 0755

status: {}
